import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

X = np.array([[-23.44945014],
              [-22.34621915],
              [-24.14482999],
              [-23.85915898],
              [-21.66191969],
              [-22.88829944],
              [-21.71693324],
              [-23.80343122],
              [-23.58869713],
              [-22.38402447],
              [-22.97945586],
              [-21.49927261],
              [-23.04685831],
              [-22.0785003],
              [-25.06670151],
              [-22.62561044],
              [-24.10412229],
              [-23.56941379],
              [-21.12769674],
              [-23.58437672]])

y = np.array([24.31774032, 45.75263605, 1.01943242, -3.96883211,
              79.54556652, 19.92541317, 70.52854494, 2.09212642,
              47.73289137, 38.95078506, 56.7826853, 100.02550457,
              45.4939922, 40.05036673, -18.29486097, 27.09023009,
              -1.58389684, 6.66794732, 92.16220381, 40.18403743])

model = LinearRegression()

model.fit(X, y)  # подбор коефф., мы это делали до этого "на глаз"

f_new = model.predict(X)  # до этого это был цикл while

linear_error = mean_squared_error(f_new, y)  # среднеквадратичное отклонение (f_new - y)**2 / n
print(linear_error)

f_new_const = np.ones(len(y)) * y.mean()  # вектор со средними значениями в колонку

const_error = mean_squared_error(f_new_const, y)
print(const_error)
